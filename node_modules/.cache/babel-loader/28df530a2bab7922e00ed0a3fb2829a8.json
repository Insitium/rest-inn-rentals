{"ast":null,"code":"var _jsxFileName = \"E:\\\\HDD Downloads\\\\SENECA\\\\SENECA\\\\SEM 2\\\\react-app\\\\src\\\\pages\\\\PropertyTypePage.js\",\n    _s = $RefreshSig$();\n\nimport Header from \"../components/Header\";\nimport Footer from '../components/Footer';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport PropertyItem from \"../components/PropertyItem\";\nimport PropertyPageItem from \"../components/PropertyPageItem\";\nimport PropertyTypeContent from \"../components/PropertyTypeContent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PropertyTypePage = () => {\n  _s();\n\n  // my state\n  const [properties, setProperties] = useState([{\n    id: \"0\",\n    type: \"\",\n    title: \"\",\n    location: \"\",\n    bestSeller: false,\n    price: \"0\",\n    Rules: \"\",\n    amenities: \"\",\n    img: null\n  }]);\n  let params = useParams();\n  useEffect(() => {\n    const URL = \"mongodb+srv://sarthak-cjv:sarthak123@cluster0.tvzyy.mongodb.net/prodInventorydb?retryWrites=true&w=majority\";\n    fetch(URL).then(response => response.json()).then(json => {\n      let a = json.filter(element => element.type === params.type);\n      setProperties(a);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid\",\n    id: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        id: \"section-property-list\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [\"Property Type : \", params.type]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), properties.map(element => {\n            return /*#__PURE__*/_jsxDEV(PropertyTypeContent, {\n              id: element.id,\n              type: element.type,\n              title: element.title,\n              bestSeller: element.bestSeller,\n              image: element.img,\n              price: element.price,\n              location: element.location,\n              amenities: element.amenities,\n              rules: element.rules\n            }, element.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 25\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-gap-1 grid-row-gap-2 grid-col-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PropertyTypePage, \"063rzR61NBIag8GhUPURK3afQ4w=\", false, function () {\n  return [useParams];\n});\n\n_c = PropertyTypePage;\nexport default PropertyTypePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"PropertyTypePage\");","map":{"version":3,"sources":["E:/HDD Downloads/SENECA/SENECA/SEM 2/react-app/src/pages/PropertyTypePage.js"],"names":["Header","Footer","useState","useEffect","useParams","PropertyItem","PropertyPageItem","PropertyTypeContent","PropertyTypePage","properties","setProperties","id","type","title","location","bestSeller","price","Rules","amenities","img","params","URL","fetch","then","response","json","a","filter","element","map","rules"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,QAAT,EAAkBC,SAAlB,QAAmC,OAAnC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,OAAOC,mBAAP,MAAgC,mCAAhC;;;AAGA,MAAMC,gBAAgB,GAAG,MAAM;AAAA;;AAG/B;AACA,QAAM,CAACC,UAAD,EAAcC,aAAd,IAA+BR,QAAQ,CAAC,CAAC;AAC3CS,IAAAA,EAAE,EAAC,GADwC;AAE3CC,IAAAA,IAAI,EAAC,EAFsC;AAG3CC,IAAAA,KAAK,EAAC,EAHqC;AAI3CC,IAAAA,QAAQ,EAAC,EAJkC;AAK3CC,IAAAA,UAAU,EAAC,KALgC;AAM3CC,IAAAA,KAAK,EAAE,GANoC;AAO3CC,IAAAA,KAAK,EAAC,EAPqC;AAQ3CC,IAAAA,SAAS,EAAC,EARiC;AAS3CC,IAAAA,GAAG,EAAG;AATqC,GAAD,CAAD,CAA7C;AAaA,MAAIC,MAAM,GAAGhB,SAAS,EAAtB;AAEED,EAAAA,SAAS,CAAC,MAAI;AACZ,UAAMkB,GAAG,GAAE,6GAAX;AACAC,IAAAA,KAAK,CAACD,GAAD,CAAL,CAAWE,IAAX,CAAiBC,QAAD,IAAYA,QAAQ,CAACC,IAAT,EAA5B,EAA6CF,IAA7C,CAAmDE,IAAD,IAAS;AACvD,UAAIC,CAAC,GAAGD,IAAI,CAACE,MAAL,CAAaC,OAAD,IAAWA,OAAO,CAAChB,IAAR,KAAeQ,MAAM,CAACR,IAA7C,CAAR;AACAF,MAAAA,aAAa,CAACgB,CAAD,CAAb;AACH,KAHD;AAID,GANQ,EAMN,EANM,CAAT;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAsB,IAAA,EAAE,EAAC,WAAzB;AAAA,4BACA,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADA,eAEI;AAAA,6BACA;AAAS,QAAA,EAAE,EAAC,uBAAZ;AAAA,+BACA;AAAK,UAAA,SAAS,EAAE,WAAhB;AAAA,kCACI;AAAA,2CAAqBN,MAAM,CAACR,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAGQH,UAAU,CAACoB,GAAX,CAAgBD,OAAD,IAAW;AACtB,gCACI,QAAC,mBAAD;AAAqB,cAAA,EAAE,EAAEA,OAAO,CAACjB,EAAjC;AAAsD,cAAA,IAAI,EAAEiB,OAAO,CAAChB,IAApE;AAA0E,cAAA,KAAK,EAAEgB,OAAO,CAACf,KAAzF;AAAgG,cAAA,UAAU,EAAEe,OAAO,CAACb,UAApH;AAAgI,cAAA,KAAK,EAAGa,OAAO,CAACT,GAAhJ;AAAqJ,cAAA,KAAK,EAAES,OAAO,CAACZ,KAApK;AAA2K,cAAA,QAAQ,EAAEY,OAAO,CAACd,QAA7L;AAAuM,cAAA,SAAS,EAAEc,OAAO,CAACV,SAA1N;AAAqO,cAAA,KAAK,EAAEU,OAAO,CAACE;AAApP,eAA0CF,OAAO,CAACjB,EAAlD;AAAA;AAAA;AAAA;AAAA,oBADJ;AAGH,WAJD,CAHR,eASI;AAAK,YAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,kBATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAkBA,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAlBA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CAjDD;;GAAMH,gB;UAiBOJ,S;;;KAjBPI,gB;AAkDN,eAAeA,gBAAf","sourcesContent":["import Header from \"../components/Header\";\r\nimport Footer from '../components/Footer';\r\nimport { useState,useEffect } from 'react'\r\nimport { useParams } from 'react-router-dom';\r\nimport PropertyItem from \"../components/PropertyItem\";\r\nimport PropertyPageItem from \"../components/PropertyPageItem\";\r\nimport PropertyTypeContent from \"../components/PropertyTypeContent\";\r\n\r\n\r\nconst PropertyTypePage = () => {\r\n\r\n    \r\n// my state\r\nconst [properties , setProperties] = useState([{\r\n    id:\"0\",\r\n    type:\"\",\r\n    title:\"\",\r\n    location:\"\",\r\n    bestSeller:false,\r\n    price: \"0\",\r\n    Rules:\"\",\r\n    amenities:\"\",\r\n    img : null,\r\n    \r\n  }]);\r\n\r\nlet params = useParams();\r\n\r\n  useEffect(()=>{\r\n    const URL =\"mongodb+srv://sarthak-cjv:sarthak123@cluster0.tvzyy.mongodb.net/prodInventorydb?retryWrites=true&w=majority\"\r\n    fetch(URL).then((response)=>response.json()).then((json) =>{\r\n        let a = json.filter((element)=>element.type===params.type)\r\n        setProperties(a);\r\n    })\r\n  }, [])\r\n  \r\n  return(\r\n    <div className=\"grid\" id=\"container\">\r\n    <Header/>\r\n        <main>\r\n        <section id=\"section-property-list\">\r\n        <div className= \"container\">\r\n            <h1>Property Type : {params.type}</h1>\r\n            {\r\n                properties.map((element)=>{\r\n                    return(\r\n                        <PropertyTypeContent id={element.id} key={element.id} type={element.type} title={element.title} bestSeller={element.bestSeller} image ={element.img} price={element.price} location={element.location} amenities={element.amenities} rules={element.rules}/>\r\n                    )\r\n                })\r\n            }\r\n            <div className=\"grid grid-gap-1 grid-row-gap-2 grid-col-4\">           \r\n            </div>\r\n          </div>\r\n          </section>\r\n        </main>\r\n    <Footer/>\r\n    </div>\r\n    )\r\n}\r\nexport default PropertyTypePage\r\n"]},"metadata":{},"sourceType":"module"}